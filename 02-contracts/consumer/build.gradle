buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.1.2.RELEASE'
        classpath "org.springframework.cloud:spring-cloud-contract-pact:2.1.2.RELEASE"
        classpath "au.com.dius:pact-jvm-provider-gradle_2.12:3.5.23"
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

apply plugin: 'spring-cloud-contract'

group = 'com.budlee.contract'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Greenwich.SR2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
    testCompile "au.com.dius:pact-jvm-consumer-junit_2.12:3.5.13"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

apply plugin: 'au.com.dius.pact'
new File("${project.rootDir}/target/pacts").mkdirs()

pact {
    publish {
        pactBrokerUrl = "http://localhost:8085"
        pactDirectory = "${project.rootDir}/target/pacts"
    }
}

task startPactBroker(type: Exec) {
    def fileLocation = project.projectDir.toString() + "/docker"
    workingDir fileLocation
    commandLine "./start.sh"
}

task stopPactBroker(type: Exec) {
    def fileLocation = project.projectDir.toString() + "/docker"
    workingDir fileLocation
    commandLine "./stop.sh"
}

pactPublish.dependsOn("startPactBroker")
test.finalizedBy("pactPublish")